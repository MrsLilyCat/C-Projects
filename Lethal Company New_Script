using BepInEx;
using HarmonyLib;
using JetBrains.Annotations;
using LethalLib.Modules;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using UnityEngine;

namespace scarlet_item
{
    [BepInPlugin(GUID, NAME, VERSION)]

    public class plugin : BaseUnityPlugin
    {
        const string GUID = "item";
        const string NAME = "item";
        const string VERSION = "0.0.1";

        public static plugin instance;

        void Awake()
        {
            instance = this;
            
            string assetDir = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), "item");
            AssetBundle bundle = AssetBundle.LoadFromFile(assetDir);
            TerminalNode node = ScriptableObject.CreateInstance<TerminalNode>();
            node.clearPreviousText = true;
            //Assets
            Item scarlet_item = bundle.LoadAsset<Item>("Assets/Item/VRMS/Scarlet/Scarlet.asset");
            Item RedCoin = bundle.LoadAsset<Item>("Assets/Item/Other/Red Coin/RedCoin.asset");
            Item StarSpawner = bundle.LoadAsset<Item>("Assets/Item/Stars/Star Spawner/StarSpawner.asset");
            Item Star = bundle.LoadAsset<Item>("Assets/Item/Stars/Star/Star.asset");
            Item KatxPainting = bundle.LoadAsset<Item>("Assets/Item/Paintings/Katx painting/KatxPainting.asset");
            Item MW3 = bundle.LoadAsset<Item>("Assets/Item/Other/Call of Duty/MW3.asset");
            Item YouDay = bundle.LoadAsset<Item>("Assets/Item/Other/You Day/YouDay.asset");
            Item RedStar = bundle.LoadAsset<Item>("Assets/Item/Stars/Red Star/Star Red.asset");
            Item GreenStar = bundle.LoadAsset<Item>("Assets/Item/Stars/Green Star/Green Star.asset");
            Item PinkStar = bundle.LoadAsset<Item>("Assets/Item/Stars/Pink Star/Pink Star.asset");
            Item TVScreen = bundle.LoadAsset<Item>("Assets/Item/TVS/TV/TV.asset");
            Item KatxGift = bundle.LoadAsset<Item>("Assets/Item/Gifts/KatxsGift/New Item.asset");
            Item BlueStar = bundle.LoadAsset<Item>("Assets/Item/Stars/Blue Star/Star.asset");
            Item FMJ = bundle.LoadAsset<Item>("Assets/Item/TVS/FMJ/FMJ.asset");
            Item sixpointedStar = bundle.LoadAsset<Item>("Assets/Item/Stars/6 Pointed Star/New Item.asset");
            Item sixpointedStarRed = bundle.LoadAsset<Item>("Assets/Item/Stars/6 Pointed Star Red/New Item.asset");
            Item sixpointedStarGreen = bundle.LoadAsset<Item>("Assets/Item/Stars/6 Pointed Star Green/New Item.asset");
            Item sixpointedStarPink = bundle.LoadAsset<Item>("Assets/Item/Stars/6 Pointed Star Pink/New Item.asset");
            Item sixpointedStarBlue = bundle.LoadAsset<Item>("Assets/Item/Stars/6pointedStarBlue/New Item.asset");
            Item eightpointedStar = bundle.LoadAsset<Item>("Assets/Item/Stars/8Normal/Star.asset");
            Item eightpointedStarRed = bundle.LoadAsset<Item>("Assets/Item/Stars/8Red/Star.asset");
            Item eightpointedStarGreen = bundle.LoadAsset<Item>("Assets/Item/Stars/8Green/Star.asset");
            Item eightpointedStarPink = bundle.LoadAsset<Item>("Assets/Item/Stars/8Pink/Star.asset");
            Item eightpointedStarBlue = bundle.LoadAsset<Item>("Assets/Item/Stars/8Blue/Star.asset");
            //NetWorkPrefabs
            NetworkPrefabs.RegisterNetworkPrefab(scarlet_item.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(RedCoin.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(StarSpawner.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(KatxPainting.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(MW3.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(YouDay.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(RedStar.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(GreenStar.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(PinkStar.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(TVScreen.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(KatxGift.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(BlueStar.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(FMJ.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(sixpointedStar.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(sixpointedStarRed.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(sixpointedStarGreen.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(Star.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(sixpointedStarPink.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(sixpointedStarBlue.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(eightpointedStar.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(eightpointedStarRed.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(eightpointedStarGreen.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(eightpointedStarPink.spawnPrefab);
            NetworkPrefabs.RegisterNetworkPrefab(eightpointedStarBlue.spawnPrefab);
            //Audio fix
            Utilities.FixMixerGroups(scarlet_item.spawnPrefab);
            Utilities.FixMixerGroups(RedCoin.spawnPrefab);
            Utilities.FixMixerGroups(StarSpawner.spawnPrefab);
            Utilities.FixMixerGroups(Star.spawnPrefab);
            Utilities.FixMixerGroups(KatxPainting.spawnPrefab);
            Utilities.FixMixerGroups(MW3.spawnPrefab);
            Utilities.FixMixerGroups(YouDay.spawnPrefab);
            Utilities.FixMixerGroups(RedStar.spawnPrefab);
            Utilities.FixMixerGroups(GreenStar.spawnPrefab);
            Utilities.FixMixerGroups(PinkStar.spawnPrefab);
            Utilities.FixMixerGroups(TVScreen.spawnPrefab);
            Utilities.FixMixerGroups(KatxGift.spawnPrefab);
            Utilities.FixMixerGroups(BlueStar.spawnPrefab);
            Utilities.FixMixerGroups(FMJ.spawnPrefab);
            Utilities.FixMixerGroups(sixpointedStar.spawnPrefab);
            Utilities.FixMixerGroups(sixpointedStarRed.spawnPrefab);
            Utilities.FixMixerGroups(sixpointedStarGreen.spawnPrefab);
            Utilities.FixMixerGroups(sixpointedStarPink.spawnPrefab);
            Utilities.FixMixerGroups(sixpointedStarBlue.spawnPrefab);
            Utilities.FixMixerGroups(eightpointedStar.spawnPrefab);
            Utilities.FixMixerGroups(eightpointedStarRed.spawnPrefab);
            Utilities.FixMixerGroups(eightpointedStarGreen.spawnPrefab);
            Utilities.FixMixerGroups(eightpointedStarPink.spawnPrefab);
            Utilities.FixMixerGroups(eightpointedStarBlue.spawnPrefab);
            //Spawn list
            Items.RegisterScrap(scarlet_item, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(RedCoin, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(StarSpawner, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(Star, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(KatxPainting, 10, Levels.LevelTypes.All);
            Items.RegisterScrap(MW3, 50, Levels.LevelTypes.All);
            Items.RegisterScrap(YouDay, 10, Levels.LevelTypes.All);
            Items.RegisterScrap(RedStar, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(GreenStar, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(PinkStar, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(TVScreen, 10, Levels.LevelTypes.All);
            Items.RegisterScrap(KatxGift, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(BlueStar, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(FMJ, 10, Levels.LevelTypes.All);
            Items.RegisterScrap(sixpointedStar, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(sixpointedStarRed, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(sixpointedStarGreen, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(sixpointedStarPink, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(sixpointedStarBlue, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(eightpointedStar, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(eightpointedStarRed, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(eightpointedStarGreen, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(eightpointedStarPink, 35, Levels.LevelTypes.All);
            Items.RegisterScrap(eightpointedStarBlue, 35, Levels.LevelTypes.All);

            Logger.LogInfo("Your shit is patched");
        }
    }

}
namespace scarlet_item.behaviors
{
    internal class Damageplayer : Shovel
    {
        public override void ItemActivate(bool used, bool buttonDown = true)
        {
            ((Shovel)this).ItemActivate(used, buttonDown);
            if (buttonDown)
            {
                ((GrabbableObject)this).playerHeldBy.ClickHoldInteraction();
            }
        }
    }
}
